### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

input CreateTaskInput {
  description: String
}

scalar Email

"""Input type for logging in a user"""
input LoginInput {
  email: Email!
  password: String!
}

type Mutation {
  createTask(data: CreateTaskInput!): Task!
  login(data: LoginInput!): AuthPayload!
  logout: Boolean!
  signup(data: SignUpInput!): AuthPayload!
  updateTasks(data: UpdateTasksInput!): [Task!]!
}

scalar Password

type Query {
  tasks: [Task!]!
  user: User!
  users: [User!]!
}

"""Input type for signing up a user"""
input SignUpInput {
  confirmPassword: Password!
  email: Email!
  name: String!
  password: Password!
}

type Task {
  completed: Boolean!
  description: String!
  id: ID!
  rank: Int!
}

input UpdateTaskInput {
  completed: Boolean
  description: String
  id: ID!
  rank: Int
}

input UpdateTasksInput {
  tasks: [UpdateTaskInput!]!
}

type User {
  email: String!
  id: ID!
  name: String!
  tasks: [Task!]!
}
