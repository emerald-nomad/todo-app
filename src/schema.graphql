### This file was autogenerated by GraphQL Nexus
### Do not make changes to this file directly


type AuthPayload {
  token: String!
  user: User!
}

type Category {
  id: ID!
  name: String!
  tasks: [Task!]!
}

input CreateTaskInput {
  description: String
}

"""
A date string, such as 2007-12-03, compliant with the `full-date` format
outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for
representation of dates and times using the Gregorian calendar.
"""
scalar Date

scalar Email

"""Input type for logging in a user"""
input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  createTask(data: CreateTaskInput!): Task!
  login(data: LoginInput!): AuthPayload!
  logout: Boolean!
  signup(data: SignUpInput!): AuthPayload!
  updateTasks(data: UpdateTasksInput!): [Task!]!
}

scalar Password

type Query {
  hello: String!
  tasks: [Task!]!
  user: User!
  users: [User!]!
}

"""Input type for signing up a user"""
input SignUpInput {
  confirmPassword: Password!
  password: Password!
  username: String!
}

type Task {
  completed: Boolean!
  date: Date!
  description: String!
  id: ID!
  rank: Int!
}

input UpdateTaskInput {
  completed: Boolean
  description: String
  id: ID!
  rank: Int
}

input UpdateTasksInput {
  tasks: [UpdateTaskInput!]!
}

type User {
  categories: [Category!]!
  id: ID!
  username: String!
}
